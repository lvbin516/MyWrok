<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="activateBtn.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2DMgC9gzIhvYMys72D
        Mlq9gzIAvYMyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9gzIAvYMyG72D
        MrC9gzL/vYMy472DMky9gzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvYMyAL2D
        Mhu9gzKyvYMy/72DMv+9gzL/vYMy4r2DMloAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2D
        MgC9gzIbvYMysr2DMv+9gzL/vYMy/72DMv+9gzL/vYMysgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC9gzIAvYMyG72DMrK9gzL/vYMy/72DMv+9gzL/vYMy/72DMrC9gzIfAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC9gzIAvYMyAL2DMhy9gzKyvYMy/72DMv+9gzL/vYMy/72DMv+9gzKyvYMyG72DMgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAL2DMgC9gzIGvYMym72DMv+9gzL/vYMy/72DMv+9gzL/vYMysr2DMhu9gzIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAvYMyAL2DMhS9gzK5vYMy/72DMv+9gzL/vYMy/72DMrK9gzIbvYMyAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAy4syAMuLMgHLizIQy4syLcuLMj/LizI/y4syQMuL
        MjfLizIXy4syA8uLMgAAAAAAAAAAAL2DMgC9gzISvYMynb2DMv29gzL/vYMy/72DMv+9gzKyvYMyG72D
        MgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAy4syAMuLMgLLizIqy4syhMuLMsnLizLry4sy+MuL
        MvjLizL4y4sy8suLMtXLizKiy4syTMuLMgvBhTIAvYMyFL2DMqG9gzL9vYMy/72DMv+9gzLcvYMyn72D
        Mh29gzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMuLMgDLizIXy4syg8uLMuPLizL/y4sy/8uL
        MvfLizLly4sy4cuLMuLLizLyy4sy/suLMv/LizL1y4syq8iJMkC9gzKhvYMy/b2DMv+9gzL/vYMyzr2D
        MjO9gzIGvYMyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMuLMgDLizIAy4syL8uLMrzLizL+y4sy/cuL
        MtXLizKHy4syRsuLMiPLizIey4syH8uLMjjLizJqy4syusuLMvXLizL/yooy8MGFMvu9gzL/vYMy/72D
        Ms69gzIxvYMyAL2DMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAy4syAMuLMizLizLOy4sy/8uL
        MvDLizKHy4syHcuLMgDLizIAAAAAAAAAAAAAAAAAy4syAMuLMgDLizILy4syWMuLMtTLizL/yooy/8GF
        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
        Af+CAAH/gcMD/8B8Af/gAA//8AAH//wAP/8=
</value>
  </data>
</root>